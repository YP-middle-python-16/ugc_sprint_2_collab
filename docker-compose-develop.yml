version: '3.9'

services:
  api:
    build: api_app
    restart: always
    container_name: api
    ports:
      - "8000:8000"
    command: bash -c 'pytest tests &&
      gunicorn main:app --workers 4
      --worker-class uvicorn.workers.UvicornWorker
      --bind 0.0.0.0:8000 --reload'
    env_file:
      - api_app/src/core/.env.dev
    logging:
      driver: "json-file"
      options:
        max-file: "10"
        max-size: "10m"
    depends_on:
      - kafka-1
      - kafka-2
    healthcheck:
      test: nc -z kafka-1 9092 || nc -z kafka-2 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  nginx:
    image: nginx:1.21.6
    container_name: nginx
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ./tmp/logs/nginx/:/var/log/nginx/:ro
    ports:
      - "80:80"
    depends_on:
      - api
  mongo:
    image: 'mongo:5.0.3'
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongodata:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper

  clickhouse-node1:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse_data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./clickhouse_data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./clickhouse_data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:20.4
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./clickhouse_data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-2
    restart: on-failure
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    restart: on-failure
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 29092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    restart: on-failure
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: nc -z localhost 39092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    environment:
      - ZOOKEEPER_CONNECT=zookeeper-1:2181;zookeeper-2:2181
      - KAFKA_BROKERCONNECT=kafka-1:9092;kafka-2:9092
    ports:
      - "8001:9000"
    links:
      - zookeeper-1
      - kafka-1
      - zookeeper-2
      - kafka-2
    depends_on:
      - zookeeper-1
      - kafka-1
      - zookeeper-2
      - kafka-2

  logstash:
    image: logstash:7.10.1
    container_name: logstash
    env_file:
      - elk/env.logstash
    ports:
      - "5044:5044/udp"
    volumes:
      - ./elk/logstash.conf:/config/logstash.conf:ro
      - ./tmp/logs/nginx/:/var/log/nginx/:ro
    command: logstash -f /config/logstash.conf

  elasticsearch:
    image: elasticsearch:7.17.4
    container_name: elasticsearch
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
    volumes:
      - /tmp/esdata:/tmp/elasticsearch/data

  kibana:
    image: kibana:7.17.4
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch